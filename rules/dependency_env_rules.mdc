---
description:
globs:
alwaysApply: false
---
# 依赖管理与开发环境配置

## 1. 依赖包管理
- **精简依赖**：只安装项目实际需要的依赖包，避免不必要的包引入。
- **版本控制**：明确 `package.json` 中的依赖版本，推荐使用 `^` 或 `~` 进行小版本自动更新，关键依赖可固定版本。
- **定期更新**：定期检查并更新依赖包到最新稳定版本，修复已知漏洞和获取新特性。
- **安全自检**：使用 `npm audit` 或 `yarn audit` 定期检查依赖包的安全漏洞并及时处理。

## 2. 开发环境配置
- **`.env` 文件管理**：所有环境变量（数据库连接、API密钥等）必须通过 `.env` 文件进行配置，并添加到 `.gitignore`。
- **环境隔离**：明确开发、测试、生产环境的配置差异，通过环境变量进行区分。
- **Docker 使用**：推荐使用Docker进行本地开发环境搭建，确保环境一致性。
- **数据库连接**：确保本地开发环境的数据库连接字符串正确配置。

## 3. 包管理工具
- **统一使用**：团队统一使用 `npm` 或 `yarn`，避免混用导致依赖问题。
- **`package-lock.json` / `yarn.lock`**：提交锁文件到版本控制，确保团队成员安装的依赖版本一致。




