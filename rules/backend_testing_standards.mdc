---
description:
globs:
alwaysApply: false
---
# 后端测试标准

## 1. 测试类型
- **单元测试 (Unit Tests)**：测试独立的函数、类或小模块，不涉及外部依赖（数据库、HTTP请求等）。
- **集成测试 (Integration Tests)**：测试多个模块之间的交互，包括与数据库、外部服务（Mocked）的集成。
- **端到端测试 (End-to-End Tests)**：模拟真实用户场景，测试整个系统流程（可选，初期可简化）。

## 2. 测试框架与工具
- **Jest**：作为主要的测试运行器和断言库。
- **Supertest**：用于测试HTTP API接口。
- **TypeMoq / ts-mockito**：用于创建Mock对象。

## 3. 测试覆盖率
- 目标：核心业务逻辑和服务模块的单元测试覆盖率达到 **80%** 以上。
- 在CI/CD中集成覆盖率检查，低于阈值时阻止合并。

## 4. 测试用例编写
- **清晰的测试命名**：描述测试的目的和预期行为。
- **Arrange-Act-Assert (AAA) 模式**：组织测试代码，提高可读性。
- **独立性**：每个测试用例应独立于其他测试用例，避免共享状态。
- **边界条件与异常处理**：测试输入边界、错误路径和异常情况。

## 5. Mocking 与 Stubbing
- 单元测试中对外部依赖（数据库、第三方API）进行Mock。
- 集成测试中，对实际外部API进行Mock，但保留数据库交互（或使用内存数据库）。

## 6. 测试数据管理
- 为测试用例准备独立的、可重现的测试数据。
- 在 `beforeEach` 和 `afterEach` 中设置和清理测试数据。

## 7. 测试驱动开发 (TDD)
- 鼓励采用TDD实践：先写失败的测试，再编写实现代码使其通过，然后重构。




